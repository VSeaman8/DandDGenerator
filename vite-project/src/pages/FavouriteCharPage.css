/* FavouriteCharPage CSS & common to all containers CSS */
.MainCharacterContainer {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: auto auto auto;
  grid-gap: 20px 0;
}

.nameContainerGrid {
  grid-column: 1 / 2;
  grid-row: 1 / 3;
}

.basicsContainerGrid {
  grid-column: 2 / 4;
  grid-row: 1 / 2;
  height: 50%;
}

.skillsContainerGrid {
  grid-column: 1 / 4; /* This makes the skillsContainerGrid take up the full width of its parent grid */
  grid-row: 5 / 6;
  /*grid-column: 2 / 2;
  grid-row: 2 / 4;*/
  display: grid;
  grid-template-columns: 1fr 1fr 1fr; /* This creates two columns of equal width */
  grid-template-rows: auto; /* This creates two rows that adjust to their content */
  grid-gap: 20px;
  width: 100%; /* This makes the skillsContainerGrid take up the full width of its parent grid cell */
}

.traitsContainerGrid {
  grid-column: 3 / 4;
  grid-row: 2 / 4;
}

.equipmentContainerGrid {
  grid-column: 1 / 4;
  grid-row: 3 / 4;
}

.featuresContainerGrid {
  grid-column: 1 / 4;
  grid-row: 4 / 5;
}

/* Features blue */
.featuresContainer {
  display: grid; /* This makes .equipmentContainer a grid container */
  grid-template-columns: repeat(
    4,
    1fr
  ); /* This creates four columns of equal width */
  grid-gap: 20px; /* This adds some space between the grid items */
}
